VALID COMMANDS:
Problem with cat
	Minishell > cat << EOF > eof1.txt | cat EOF2 >> eof1.txt | cat eof1.txt 
	> Inici 1er cat
	> la sortida sera EOF
	> EOF
	/usr/bin/cat: EOF2: No such file or directory
	CAL MIRAR AQUEST MISSAGTE, NO INTERPRETA EL COMANDO


One command, wrong input    
	bash-3.2$ <../test/no ls;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: ../test/no: No such file or directory
	Exit: 1 Pipe: 1
    
Two commands, first input wrongt
	bash-3.2$ <../test/no ls | ls;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: ../test/no: No such file or directory
	Makefile	include		lib		minishell	src
	Exit: 0 Pipe: 1

2 commands, last input wrong
	bash-3.2$ ls | <../test/no ls;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: ../test/no: No such file or directory
	Exit 1 Pipe 141

3 commands, middle input wrong
	bash-3.2$ ls -la | <../test/no ls | ls -la ../test;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: ../test/no: No such file or directory
	total 144
	drwxr-xr-x  20 fcatala-  2022_barcelona    680 May  4 12:03 .
	drwxr-xr-x   8 fcatala-  2022_barcelona    272 May  1 17:46 ..
	-rw-------   1 fcatala-  2022_barcelona  12288 May  4 12:13 .redirs.txt.swp
	...
	Exit: 0 Pipe: 141

4 commands, middle input wrong
	ls -la | grep m | <../test/no ls | ls -la ../test;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: ../test/no: No such file or directory
	total 144
	drwxr-xr-x  20 fcatala-  2022_barcelona    680 May  4 12:03 .
	drwxr-xr-x   8 fcatala-  2022_barcelona    272 May  1 17:46 ..
	-rw-------   1 fcatala-  2022_barcelona  12288 May  4 12:26 .redirs.txt.swp
	-rw-r--r--   1 fcatala-  2022_barcelona      0 Apr 30 17:47 error1.txt
	...
	Exit: 0 Pipe: 0

n commands, final input wrong 
	bash-3.2$ ls -la | grep m | wc  | ls -la ../test | < no grep May;echo "Exit:" $? "Pipe: "$PIPESTATUS
	bash: no: No such file or directory
	Exit: 1 Pipe: 0

VALID COMMANDS, RIGTH INPUTS
One command 2 inputs
	bash-3.2$ <../test/out5.txt <../test/new2.txt wc
	      43     372    2852
	bash-3.2$ <../test/new2.txt wc
      43     372    2852
	=> only last redir

	bash-3.2$ <../test/out5.txt <../test/new2.txt wc >../test/wc01.txt >../test/wc02.txt;echo Exit: $? Pipe: $PIPESTATUS
	Exit: 0 Pipe: 0
	=> Only last redirs

VALID COMMANDS, WRONG INPUT OR OUTPUTS

One command, 2 inputs, first wrong, one output
	bash-3.2$ < no < ../test/new2.txt wc >../test/ok3.txt;echo Exit: $? Pipe: $PIPESTATUS
	bash: no: No such file or directory
	Exit: 1 Pipe: 1
	output not created

	bash-3.2$ < ../test/new2.txt <wo wc;echo Exit: $? Pipe: $PIPESTATUS
	bash: wo: No such file or directory
	Exit: 1 Pipe: 1

	bash-3.2$ < ../test/new2.txt <wo <../test/new3.txt wc;echo Exit: $? Pipe: $PIPESTATUS
	bash: wo: No such file or directory
	Exit: 1 Pipe: 1

	bash-3.2$ < ../test/new2.txt <wo <no wc;echo Exit: $? Pipe: $PIPESTATUS
	bash: wo: No such file or directory
	Exit: 1 Pipe: 1

One command, 2 inputs, first wrong, one output => Error, not output created

Two commands, first with some input wrong, last without in/out
	bash-3.2$ < ../test/new2.txt <wo wc >../test/ok2.txt | ls ;echo Exit: $? Pipe: $PIPESTATUS
	bash: wo: No such file or directory
	Makefile	include		lib		ls		minishell	src
	Exit: 0 Pipe: 1

WRONG COMMANDS
one wrong command
	bash-3.2$ lsd;echo Exit: $? Pipe: $PIPESTATUS
	bash: lsd: command not found
	Exit: 127 Pipe: 127

2 commands, first wrong
	bash-3.2$ lsd | wc;echo Exit: $? Pipe: $PIPESTATUS
	bash: lsd: command not found
       0       0       0
	Exit: 0 Pipe: 127

2 commands, last wrong
	bash-3.2$ ls -la ../test | grup;echo Exit: $? Pipe: $PIPESTATUS
	bash: grup: command not found
	Exit: 127 Pipe: 141

3 commands, middle wrong
	bash-3.2$ ls -la | grop | ls;echo Exit: $? Pipe: $PIPESTATUS
	Makefile	include		lib		minishell	src
	bash: grop: command not found
	Exit: 0 Pipe: 0

4 commands, middle wrong
	bash-3.2$ ls -la | grep m | grop | ls -la ../test;echo Exit: $? Pipe: $PIPESTATUS
	bash: grop: command not found
	total 144
	drwxr-xr-x  20 fcatala-  2022_barcelona    680 May  4 12:03 .
	drwxr-xr-x   8 fcatala-  2022_barcelona    272 May  1 17:46 ..
	-rw-------   1 fcatala-  2022_barcelona  12288 May  4 12:48 .redirs.txt.swp
	-rw-r--r--   1 fcatala-  2022_barcelona      0 Apr 30 17:47 error1.txt
	...
	Exit: 0 Pipe: 0

n commands, last wrong
	bash-3.2$ ls -la | grep m | wc -l | wc | kaka;echo Exit: $? Pipe: $PIPESTATUS
	bash: kaka: command not found
	Exit: 127 Pipe: 0

n commands, last wrong but file exits
	bash-3.2$ ls -la | grep m | wc -l | wc | ../test/ok.txt;echo Exit: $? Pipe: $PIPESTATUS
	bash: ../test/ok.txt: Permission denied
	Exit: 126 Pipe: 0

ALL RIGHT BUT LAST FILE IN IS CREATED IN FIRST PIE
	bash-3.2$cat << EOF >>../test/wc01.txt | ls -la >../test/new3.txt | <../test/wc01.txt wc >../test/new1.txt;echo Exit: $? Pipe: $PIPESTATUS
	bash: ../test/wc01.txt: No such file or directory
	Exit: 1 Pipe: 0
	but file created, although not read. Last file not created

Magic line:
	bash:
	ls > a | << b | wc < a > b | << hola | wc < b > c
	the test:
	> hola
	> feo
	> a
	> b
	> fea
	> hola
	bash: b: No such file or directory
	ls > a
		a was created with the content of ls
	<< b 
		finished when b was entered, 
	wc < a > b
		although a existed, the content in b is
		0       0       0
	<< hola
		finished when hola was entered
	wc < b > c
		although b existed:
		bash: b: No such file or directory
		so c was not created

	executer
	ls > ../test/a | << b | wc < ../test/a > ../test/b | << hola | wc <../test/ b > ../test/c
	> hola
	> feo
	> a
	> b
	> fea
	> hola
	wc: b: open: No such file or directory => mistake in the magic line
	Same in bash, but executer should write Minishell:
	again!

	ls > d | << e | wc < d > e | << hola | wc < e > f
	> hola
	> feo
	> e
	> fea
	> hola

	Exit code: 0
	1) No errors (it happens sometimes in bash as well)
	d, e & f created

	ls > d
		d was created with the content of ls, including d
	<< e
		finished when e was entered
	wc < d > e
		d existed prior execution and was succesfully read
		e was written with the right content
	<< hola
		finished when hola was entered
	wc < e > f
		fully successful

waitng function is in ascending mode:
	Child 5138 wc pos 5 end status: 0
	Children 5134 pos 1 end status: 0
	Children 5135 pos 2 end status: 0
	Children 5136 pos 3 end status: 0
	Children 5137 pos 4 iend status: 0
Same behavior in descendnig mode

	ls -la >../test/ro.txt | ls -la ../test | grep eof | wc >../test/new69.txt >../test/new70.txt | <../test/ro.txt grep word
	Minishell: ../test/ro.txt: Permission denied
	word1
	word1
	word1 con algo mas
	algo mas con word 1
	ultima1 word1x3

	Redirs well executed

PIPES NOT CLOSED
First pipe empty
	test$  | grep m | wc
	bash: syntax error near unexpected token `|'
	Minishell > | wc -l
	23
	32
	after this ctr+d
	3
	DOES NOT BEHAVE AS SHELL

Last pipe empty
	test$ ls -la | grep f |
	> wc -l
	11
	Executes the command sequence, it behaves as usual pipe
	
	Minishell > ls -la | grep f |
	Children 1044358 pos 2 terminated with status: 0. Check signals
	Children 1044357 pos 1 terminated with status: 0. Check signals
	Executes the command sequence without the last pipe

Middle pipe empty
	test$ ls -la | | wc -l
	bash: syntax error near unexpected token `|'

	Minishell > ls -la | | wc -l
	Minishell: syntax error near unexpected token `|'
	
	SAME BEHAVIOR
	CONCLUSION Minishell first empty behaves as bash last empty

	EXPECTED BEHAVIOR: ONLY EMPTY LAST PIPE MUST BE EXECUTED TAKING AS COMMAND THE USER ENTRY

SPECIAL COMMANDS

	bash-3.2$ wc;echo Exit: $?
	a
	b
	c
       3       3       6
	Exit: 0

	Minishell > wc
	a
	b
	c
	       3       3       6
	Exit code: 0
	WORKS FINE!
	
CD

A CONTROLAR
	bash-3.2$ mkdir borrar2
	bash-3.2$ cd borrar2
	bash-3.2$ rm -rf ../borrar2
	bash-3.2$ pwd
	/Users/fcatala-/Documents/Cursus/minishell/test/borrar2
	bash-3.2$ cd .
	cd: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
	bash-3.2$ echo $?
	0
	NO LO CONSIDERA COMO UN ERROR!!!!

	Minishell > mkdir borrar2
	Minishell > cd borrar2
	Minishell > rm -rf ../borrar2
	Minishell > pwd
	/Users/fcatala-/Documents/Cursus/minishell/test/borrar2
	Minishell > cd .
	cd: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
	Minishell > echo $?
	0
	:-D MISMO COMPORTAMIENTO

2 commands, cd at begining
	bash-3.2$ cd ../test | grep i;echo Exit: $?
	Exit: 1

	bash-3.2$ cd ../test | ls;echo Exit: $?
	Makefile	include		lib		minishell	src
	Exit: 0

	bash-3.2$ cd ../test >../test/cdnew.txt | ls;echo Exit: $?
	Makefile	include		lib		minishell	src
	Exit: 0
	bash-3.2$ ls ../test ;echo Exit: $?
	a		eofcat.txt	infile2.txt	ls2.txt		ok.txt		pwd1.txt	w1.txt
	b		error1.txt	infile3.txt	myeof.txt	out55.txt	redirect	w2.txt
	c		fin.txt		list.sh		new1.txt	outkkkls9.txt	redirect2	wc01.txt
	cd.txt		fin2.txt	ls-la.sh	new69.txt	outls9.txt	redirs.txt	wo.txt
	cdnew.txt	infile1.txt	ls1.txt		new70.txt	outls9999.txt	ro.txt
	bash-3.2$ cat ../test/cdnew.txt
	cdnew created but empty => redirs are first

	bash-3.2$ cd ../test | lsd;echo Exit $?
	bash: lsd: command not found
	Exit 127
	
	bash-3.2$ cd ../tost | ls;echo Exit: $?
	bash: cd: ../tost: No such file or directory
	Makefile	include		lib		minishell	src
	Exit: 0

With 2 commands, cd at begining
	cd is not executed, but checked
	redirs are done
	exit code (as always) is the last one

2 commands, cd at the end
	bash-3.2$ wc | cd ../test;echo Exit: $?
	a
	b
	c
	Exit: 0

	bash-3.2$ ls >../test/ls99.txt | cd ../test;echo Exit $?
	Exit 0
	bash-3.2$ cat ../test/ls99.txt;echo Exit $?
	Makefile
	include
	lib
	minishell
	src
	Exit 0

	bash-3.2$ lsd | cd ../test;echo Exit $?
	bash: lsd: command not found
	Exit 0
	
	bash-3.2$ ls >../test/ls99.txt | cd ../tost;echo Exit $?
	bash: cd: ../tost: No such file or directory
	Exit 1


With 2 commands, cd at the end
	cd is not executed, but checked
	redirs are done
	exit code (as always) is the last one => cd if executed

CONCLUSION 1
	cd is only executed in solo, but checked always

Wrong directory
	new$ cd a
	bash: cd: a: No such file or directory
	echo $?
	1


cd with 2 or more arguments
single command

	cd src test;echo $?
	bash: cd: too many arguments
	1

first command
	cd src test | ls;echo $?
	bash: cd: too many arguments
	include  lib  Makefile	minishell  src	test
	0

middle
	ls -la | cd src test | ls;echo $?
	bash: cd: too many arguments
	include  lib  Makefile	minishell  src	test
	0

last
	ls -la | wc | cd src test;echo $?
	bash: cd: too many arguments
	1

	new$ ls -la | wc >> test/file1.txt | cd src test;echo $?
	bash: cd: too many arguments
	1
	new$ cat test/file1.txt 
	hola 1
	hola 66
	hola 2
	hola 3
	kosa
	     12     101     715

HEREDOC with signals
CTRL + d
	cat << EOF | wc
	> 1
	> 2
	> after this : ctrl d
	>        3       7      24
	Exit success

	bash-3.2$ cat << EOF | grep m
	> dede
	> dede
	> after this ctrl D
	> bash-3.2$
	bash-3.2$ echo $?
	Exit 1
	Note that the last line of th heredoc is the result of the piping

	bash-3.2$ cat << EOF | grep m | wc
	> ww
	> ww
	> ww
	> EOF
	       0       0       0
	bash-3.2$ cat << EOF | grep m | wc
	> WW
	> WW
	> after this ctrl d
	>        0       0       0
	bash-3.2$ echo Exit $?
	Exit 0

	bash-3.2$ cat << EOF >../test/myeof.txt | grep m | wc
	> www
	> www
	> www
	> after this ctrl d
	>        0       0       0
	bash-3.2$ cat ../test/myeof.txt
	www
	www
	www
	after this ctrl d
	ctrl + d acts like EOF


HEREDOC WITH MULTIPLE PIPES
	bash-3.2$ cat << EOF >../test/myeof.txt | grep m | cat << EOF2 >>../test/myeof.txt | grep m | wc
	> dudu
	> dudu
	> EOF
	> dede
	> dede
	> EOF2
	       0       0       0
	bash-3.2$ cat ../test/myeof.txt
	dudu
	dudu
	dede
	dede

	bash-3.2$ cat << EOF >../test/myeof.txt | grep m | cat << EOF2 >>../test/myeof.txt | grep m | wc >>../test/myeof.txt
	> dudu
	> dudu
	> EOF
	> dede
	> dede
	> EOF2
	bash-3.2$ cat ../test/myeof.txt
	dudu
	dudu
	     0       0
	dede
	dede

	bash-3.2$ cat << EOF >../test/myeof.txt | grep m | cat << EOF2 >>../test/myeof.txt | grep m | wc >>../test/myeof.txt
	> lele
	> lele
	> EOF
	> lolo
	> lolo
	> EOF2
	bash-3.2$ cat ../test/myeof.txt
	lele
	lele
	lolo
	lolo
	       0       0       0
	SEQUENCE OF WRITTING IN FILE IS NOT FIXED!!!

HEREDOC WITH MULTIPLE PIPES AND SIGNALS
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> lele
	> lili
	> EOF
	> lulu
	> ctr d
	> bash-3.2$
	bash-3.2$ cat ../test/myeof3.txt
	lele
	lili
	     0       0
	lulu
	ctr d
	EXIT SUCCESS
	
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> 11
	> 11
	> EOF
	> 22
	> 22
	> ctr d
	> bash-3.2$ echo $?
	0
	bash-3.2$ cat ../test/myeof3.txt
	11
	11
	 0       0       0
	22
	22
	ctr d
	EXIT SUCCESS, NEW COMMAND LINE EXECUTABLE IN THE PROPMT OF HEREDOC
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> 11
	> 11
	> EOF
	> 22
	> 22
	> CTR D
	> bash-3.2$ ls
	Makefile	include		lib		minishell	src
	
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> 11
	> 11
	> ctr d
	> > 22
	> 22
	> EOF2
	bash-3.2$ cat ../test/myeof3.txt
	11
	11
	ctr d
	22
	22
       0       0       0
	AFTER THE FIRST CTRL D closes the first heredoc an displays the propmt of the second, then pipes and redirs

CTR C in first EOF
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> meme
	> meme
	> ctr c
	>
	bash-3.2$ echo $?
	1
	Exit failure, no file created
	
	bash$ cat << EOF >s1.txt | cat << EOF2 >s2.txt | cat << EOF3 >s3.txt | ls
	> s1
	>    => ctr+c here

	bash$ echo $?
	130
	NO FILE CREATED, NO EXECUTION, EXIT CODE 130

	cat << EOF >s1.txt | cat << EOF2 >s2.txt | cat << EOF3 >s3.txt | ls >new.txt
	> s1
	> s1 interruptus EN esta linea
	bash$ ATENCION! LA SENYAL INTERRUMPE LA LINEA; MUESTRA UNA NUEVA LINEA DE BASH EN LA PANTALLA
	bash$ echo $?
	130

CTR C in second EOF
	bash$ cat << EOF >s1.txt | cat << EOF2 >s2.txt | cat << EOF3 >s3.txt | ls >new.txt
	> s1 ok
	> EOF
	> s2 interruptus tras esta linea
	>
	bash$ echo $?
	130
	NO FILE CREATED, NO EXECUTION, EXIT CODE 130
	bash$

CTR C in last EOF
	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> meme
	> meme
	> EOF
	> dede
	> ctr c
	>
	bash-3.2$ echo $?
	1
	Exit failure, no file created

	bash-3.2$ cat << EOF >../test/myeof3.txt | grep m | cat << EOF2 >>../test/myeof3.txt | grep m | wc >>../test/myeof3.txt
	> meme
	> momo
	> ctr d in next line
	> full while ctr d => nothing happens
	> EOF
	> moco
	> ctr c ini next line
	> full line while ctr c
	bash-3.2$ echo $?
	1
	Exit failure, no file created
	
	bash$ cat << EOF >s1.txt | cat << EOF2 >s2.txt | cat << EOF3 >s3.txt | ls >new.txt
	> s1 ok
	> EOF
	> s2 ok
	> EOF2
	> s3 interruptus tras linea
	> 
	bash$ echo $?
	130
	NO FILE CREATED, NO EXECUTION, EXIT CODE 130
	bash$

HEREDOC WITH EXPANSIONS
1 env variable in a line:
	bash-3.2$ cat << EOF
	> $USER
	> nada mas
	> EOF
	fcatala-
	nada mas

2 env variables in a line and strings around them
	bash-3.2$ cat << EOF
	> More testings: string env variable string =>
	> Da master is $USER and he works in $PWD as a fool
	> end of this
	> EOF
	More testings: string env variable string =>
	Da master is fcatala- and he works in /Users/fcatala-/Documents/Cursus/minishell/minishell42 as a fool
	end of this

env variables in a line: one does'nt exist yet, the othe has never existed
	bash-3.2$ cat << EOF
	> $USER is brutal!
	> The present is $PWD and the past was $OLDPWD ou yeah
	> But I cannot read breoken things like $PA
	> TH
	> end of the story
	> EOF
	fcatala- is brutal!
	The present is /Users/fcatala-/Documents/Cursus/minishell/minishell42 and the past was  ou yeah
	But I cannot read breoken things like
	TH
	end of the story
	
NOTE: NO ERROR HAS BEEN RETRIEVED FOR THE UNEXISTING VARIABLE

heredoc combining variables inside and outside quotes:
	bash-3.2$ cat << EOF
	> dede
	> $USER
	> "El $USER soy " $USER
	> EOF
	dede
	fcatala-
	"El fcatala- soy " fcatala-
	
	Minishell > cat << EOF
	> dede
	> $USER
	> "El $USER soy " $USER
	> EOF
	dede
	fcatala-
	"El fcatala- soy " fcatala-

	bash-3.2$ cat << EOF
	> "El $USER esta en $HOME"
	> EOF
	"El fcatala- esta en /Users/fcatala-"
	bash-3.2$ ./minishell
	Minishell > cat << EOF
	> "El $USER esta en $HOME"
	> EOF
	"El fcatala- esta en /Users/fcatala-"
	
SE COMPORTA IGUAL

CTR+\
Interactive 1 command (CAT)
	test$ cat >>file1.txt 
	file1.txt exists 
	ctr+\ in this line^\Quit (core dumped)
	test$ echo $?
	131

	Content of file1.txt:
	EXISTING CONTENT
	..... => new content
	file1.txt exists




EXPORT Y UNSET => only works when single commands
	bash$ export THINGXAVI=38 | echo $THINGXAVI

	=> The variable has not been set nor updated

	bash$ < kk export THINGXAVI=19677
	bash: kk: No such file or directory
	echo $?
	1
	=> The variable has not been set nor updated

EXIT
Test with exit codes: not numeric (new$ is bash)
	new$ exit de
	exit
	bash: exit: de: numeric argument required
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	2
	EXIT VALUE = 2
	
	new$ exit +-32
	exit
	bash: exit: +-32: numeric argument required
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	2
	EXIT VALUE = 2
	
	new$ exit -13
	exit
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	243

	new$ exit -42
	exit
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	214

	new$ exit -0
	exit
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	0

	new$ exit -1
	exit
	echo $? =>LINE IN NEW BASH (ONCE EXIT IS DONE)
	255

	new$ exit -256
	exit
 	% echo $?
	0

	exit -257
	exit
	echo $?
	255  => LIKE EXIT -1

	new$ exit -512
	exit
 	echo $?
	0  => exit_code % 256

	new$ exit 256
	exit
 	% echo $?
	0

	new$ exit 257
	exit
 	% echo $?
	1 => exit_code % 256

	new$ exit +42
	exit
 	% echo $?
	42

	new$ exit 8a
	exit
	bash: exit: 8a: numeric argument required
	% echo $?
	2

	new$ exit -8a
	exit
	bash: exit: -8a: numeric argument required
 	% echo $?
	2


pseudo code
	if (ft_atoi(exit_code) >= 0)
		exit_value = ft_atoi(exit_code) % 256
	else
		exit_value = 256 - (ft_atoi(exit_code) % 256)



